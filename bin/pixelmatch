#!/usr/bin/env node
/* eslint-disable no-process-exit */

'use strict';

var PNG = require('pngjs').PNG;
var fs = require('fs');
var match = require('../.');

if (process.argv.length < 4) {
    console.log('Usage: imagematch image1.png image2.png [diff.png] [threshold=0.005] [includeAA=false]');
    process.exit(64);
}

var diffPath = process.argv[4];
var threshold = isNaN(+process.argv[5]) ? undefined : +process.argv[5];
var includeAA = process.argv[6] === 'true';

var img1 = fs.createReadStream(process.argv[2]).pipe(new PNG()).on('parsed', doneReading);
var img2 = fs.createReadStream(process.argv[3]).pipe(new PNG()).on('parsed', doneReading);

function doneReading() {
    if (!img1.data || !img2.data) return;

    var width = img1.width;
    var height = img1.height;

    if (img2.width !== width || img2.height !== height) {
        console.log('Image dimensions do not match: %dx%d vs %dx%d', width, height, img2.width, img2.height);
        process.exit(65);
    }

    var diff = diffPath ? new PNG({width: width, height: height}) : null;

    console.time('matched in');
    var diffs = match(img1.data, img2.data, diff ? diff.data : null, width, height, {
        threshold: threshold,
        includeAA: includeAA
    });
    console.timeEnd('matched in');

    console.log('different pixels: ' + diffs);
    console.log('error: ' + (Math.round(100 * 100 * diffs / (width * height)) / 100) + '%');

    var exitCode = diffs ? 66 : 0;

    if (diff) {
        diff.pack().pipe(fs.createWriteStream(diffPath)).on('close', function () {
            process.exit(exitCode);
        });
    } else {
        process.exit(exitCode);
    }
}
